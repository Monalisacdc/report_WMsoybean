{"title":"Method 1 IPT test","markdown":{"yaml":{"title":"","format":"html","editor":"visual"},"headingText":"Method 1 IPT test","containsRefs":false,"markdown":"\n\n\nThe ITP test evaluates whether the temporal patterns of a weather variable differ significantly between epidemic and non-epidemic conditions, highlighting the critical time periods in which these differences occur.\n\n# function FDATEST\n\n```{r}\n#| warning: false\n#| message: false\n#| echo: true\n#| code-fold: true \nlibrary(gsheet)\ntrials_weather = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1SIb-z-c2R4DiNAV8AcFAn7UPjlQe5t5bPxxl1tMdQwA/edit?usp=sharing\")\n```\n\n```{r}\n#| warning: false\n#| message: false\n#| echo: true\n#| code-fold: true \nlibrary(fdatest)\nlibrary(dplyr)\nlibrary(tidyr)\n\nrun_ITP_test <- function(data, weather_var = \"RH2M\", B = 100) {\n  \n  # Preprocessing\n  data <- data %>%\n    mutate(\n      YYYYMMDD = as.Date(YYYYMMDD),\n      days = days\n     \n    )\n  \n  weather_var_sym <- sym(weather_var)\n  \n  # Filter epidemic data\n  df_epidemic <- data %>%\n    mutate(days = round(days)) %>%\n    filter(epidemic == 1, days > -10) %>%\n    dplyr::select(!!weather_var_sym, days, study) %>%\n    group_by(study, days) %>%\n    summarise(value = mean(!!weather_var_sym, na.rm = TRUE), .groups = \"drop\")\n  \n  # Filter non-epidemic data\n  df_non_epidemic <- data %>%\n    mutate(days = round(days)) %>%\n    filter(epidemic != 1, days > -10) %>%\n    dplyr::select(!!weather_var_sym, days, study) %>%\n    group_by(study, days) %>%\n    summarise(value = mean(!!weather_var_sym, na.rm = TRUE), .groups = \"drop\")\n  \n  # Pivot to wide format\n  df_epidemic_wide <- df_epidemic %>%\n    pivot_wider(names_from = days, values_from = value) %>%\n    ungroup() %>%\n    dplyr::select(-study)\n  \n  df_non_epidemic_wide <- df_non_epidemic %>%\n    pivot_wider(names_from = days, values_from = value) %>%\n    ungroup() %>%\n    dplyr::select(-study)\n  \n \n  \n  # Convert to matrix\n  data_epidemic <- as.matrix(df_epidemic_wide)\n  data_non_epidemic <- as.matrix(df_non_epidemic_wide)\n  \n  # Perform FDA test\n  itp_result <- ITP2bspline(data1 = data_epidemic, data2 = data_non_epidemic, B = B)\n  \n  # Output results\n  cat(\"Global p-value for\", weather_var, \":\", itp_result$corrected.pval, \"\\n\")\n  significant_components <- which(itp_result$corrected.pval < 0.05)\n  \n  if (length(significant_components) > 0) {\n    cat(\"Significant components (basis coefficients) for\", weather_var, \":\\n\")\n    print(significant_components)\n  } else {\n    cat(\"No significant components found for\", weather_var, \"\\n\")\n  }\n  \n  # Plot FDA results\n  plot(itp_result, main = weather_var, xrange = c(-10, 90), xlab = 'Day', xaxt = 'n')\n  axis(1, at = seq(-10, 90, by = 2), labels = seq(-10, 90, by = 2))\n  pvals <- itp_result$pval\n\n  # Define significance threshold\n  alpha <- 0.05\n\n  # Identify significant time points\n  significant_points <- which(pvals < alpha)\n\n  # Group into contiguous regions\n  if (length(significant_points) > 0) {\n    stable_regions <- split(significant_points, cumsum(c(1, diff(significant_points) != 1)))\n    region_ranges <- lapply(stable_regions, function(x) range(x))\n\n    cat(\"Stable regions (p-value <\", alpha, \"):\\n\")\n    for (r in region_ranges) {\n      cat(\"Day\", r[1] - 10, \"to\", r[2] - 10, \"\\n\")\n    }\n  } else {\n    cat(\"No stable regions with p-value <\", alpha, \" found.\\n\")\n  }\n  \n  return(itp_result)\n}\n```\n\n## fdatest variables\n\n```{r}\n#| warning: false\n#| message: false\n#| echo: true\n#| code-fold: true \nstr(trials_weather)\nlibrary(fdatest)\nitp_tmean <- run_ITP_test(data = trials_weather, weather_var = \"T2M\", B = 100)\n\nitp_GWETROOT <- run_ITP_test(data = trials_weather, weather_var = \"GWETROOT\", B = 100)\n\n\nitp_GWETTOP <- run_ITP_test(data = trials_weather, weather_var = \"GWETTOP\", B = 100)\n\nitp_TMAX <- run_ITP_test(data = trials_weather, weather_var = \"T2M_MAX\", B = 100)\n\ntp_TMIN <- run_ITP_test(data = trials_weather, weather_var = \"T2M_MIN\", B = 100)\n\ntp_rh2m <- run_ITP_test(data = trials_weather, weather_var = \"RH2M\", B = 100)\n\ntp_PREC <- run_ITP_test(data = trials_weather, weather_var = \"PRECTOTCORR\", B = 100)\n\ntp_PREC <- run_ITP_test(data = trials_weather, weather_var = \"T2MDEW\", B = 100)\n\ntp_PREC <- run_ITP_test(data = trials_weather, weather_var = \"CLRSKY_SFC_SW_DWN\", B = 100)\n\ntp_PREC <- run_ITP_test(data = trials_weather, weather_var = \"WS2M\", B = 100)\ntp_PREC <- run_ITP_test(data = trials_weather, weather_var = \"PS\", B = 100)\ntp_PREC <- run_ITP_test(data = trials_weather, weather_var = \"ALLSKY_SFC_SW_DWN\", B = 100)\n\n```\n","srcMarkdownNoYaml":"\n\n# Method 1 IPT test\n\nThe ITP test evaluates whether the temporal patterns of a weather variable differ significantly between epidemic and non-epidemic conditions, highlighting the critical time periods in which these differences occur.\n\n# function FDATEST\n\n```{r}\n#| warning: false\n#| message: false\n#| echo: true\n#| code-fold: true \nlibrary(gsheet)\ntrials_weather = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1SIb-z-c2R4DiNAV8AcFAn7UPjlQe5t5bPxxl1tMdQwA/edit?usp=sharing\")\n```\n\n```{r}\n#| warning: false\n#| message: false\n#| echo: true\n#| code-fold: true \nlibrary(fdatest)\nlibrary(dplyr)\nlibrary(tidyr)\n\nrun_ITP_test <- function(data, weather_var = \"RH2M\", B = 100) {\n  \n  # Preprocessing\n  data <- data %>%\n    mutate(\n      YYYYMMDD = as.Date(YYYYMMDD),\n      days = days\n     \n    )\n  \n  weather_var_sym <- sym(weather_var)\n  \n  # Filter epidemic data\n  df_epidemic <- data %>%\n    mutate(days = round(days)) %>%\n    filter(epidemic == 1, days > -10) %>%\n    dplyr::select(!!weather_var_sym, days, study) %>%\n    group_by(study, days) %>%\n    summarise(value = mean(!!weather_var_sym, na.rm = TRUE), .groups = \"drop\")\n  \n  # Filter non-epidemic data\n  df_non_epidemic <- data %>%\n    mutate(days = round(days)) %>%\n    filter(epidemic != 1, days > -10) %>%\n    dplyr::select(!!weather_var_sym, days, study) %>%\n    group_by(study, days) %>%\n    summarise(value = mean(!!weather_var_sym, na.rm = TRUE), .groups = \"drop\")\n  \n  # Pivot to wide format\n  df_epidemic_wide <- df_epidemic %>%\n    pivot_wider(names_from = days, values_from = value) %>%\n    ungroup() %>%\n    dplyr::select(-study)\n  \n  df_non_epidemic_wide <- df_non_epidemic %>%\n    pivot_wider(names_from = days, values_from = value) %>%\n    ungroup() %>%\n    dplyr::select(-study)\n  \n \n  \n  # Convert to matrix\n  data_epidemic <- as.matrix(df_epidemic_wide)\n  data_non_epidemic <- as.matrix(df_non_epidemic_wide)\n  \n  # Perform FDA test\n  itp_result <- ITP2bspline(data1 = data_epidemic, data2 = data_non_epidemic, B = B)\n  \n  # Output results\n  cat(\"Global p-value for\", weather_var, \":\", itp_result$corrected.pval, \"\\n\")\n  significant_components <- which(itp_result$corrected.pval < 0.05)\n  \n  if (length(significant_components) > 0) {\n    cat(\"Significant components (basis coefficients) for\", weather_var, \":\\n\")\n    print(significant_components)\n  } else {\n    cat(\"No significant components found for\", weather_var, \"\\n\")\n  }\n  \n  # Plot FDA results\n  plot(itp_result, main = weather_var, xrange = c(-10, 90), xlab = 'Day', xaxt = 'n')\n  axis(1, at = seq(-10, 90, by = 2), labels = seq(-10, 90, by = 2))\n  pvals <- itp_result$pval\n\n  # Define significance threshold\n  alpha <- 0.05\n\n  # Identify significant time points\n  significant_points <- which(pvals < alpha)\n\n  # Group into contiguous regions\n  if (length(significant_points) > 0) {\n    stable_regions <- split(significant_points, cumsum(c(1, diff(significant_points) != 1)))\n    region_ranges <- lapply(stable_regions, function(x) range(x))\n\n    cat(\"Stable regions (p-value <\", alpha, \"):\\n\")\n    for (r in region_ranges) {\n      cat(\"Day\", r[1] - 10, \"to\", r[2] - 10, \"\\n\")\n    }\n  } else {\n    cat(\"No stable regions with p-value <\", alpha, \" found.\\n\")\n  }\n  \n  return(itp_result)\n}\n```\n\n## fdatest variables\n\n```{r}\n#| warning: false\n#| message: false\n#| echo: true\n#| code-fold: true \nstr(trials_weather)\nlibrary(fdatest)\nitp_tmean <- run_ITP_test(data = trials_weather, weather_var = \"T2M\", B = 100)\n\nitp_GWETROOT <- run_ITP_test(data = trials_weather, weather_var = \"GWETROOT\", B = 100)\n\n\nitp_GWETTOP <- run_ITP_test(data = trials_weather, weather_var = \"GWETTOP\", B = 100)\n\nitp_TMAX <- run_ITP_test(data = trials_weather, weather_var = \"T2M_MAX\", B = 100)\n\ntp_TMIN <- run_ITP_test(data = trials_weather, weather_var = \"T2M_MIN\", B = 100)\n\ntp_rh2m <- run_ITP_test(data = trials_weather, weather_var = \"RH2M\", B = 100)\n\ntp_PREC <- run_ITP_test(data = trials_weather, weather_var = \"PRECTOTCORR\", B = 100)\n\ntp_PREC <- run_ITP_test(data = trials_weather, weather_var = \"T2MDEW\", B = 100)\n\ntp_PREC <- run_ITP_test(data = trials_weather, weather_var = \"CLRSKY_SFC_SW_DWN\", B = 100)\n\ntp_PREC <- run_ITP_test(data = trials_weather, weather_var = \"WS2M\", B = 100)\ntp_PREC <- run_ITP_test(data = trials_weather, weather_var = \"PS\", B = 100)\ntp_PREC <- run_ITP_test(data = trials_weather, weather_var = \"ALLSKY_SFC_SW_DWN\", B = 100)\n\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"ipt.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"visual","toc_depth":3,"toc_title":"Sumário","toc_float":{"collapsed":"no","smooth_scroll":"no"},"lib_dir":"site_libs","self_contained":"no","title":""},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}