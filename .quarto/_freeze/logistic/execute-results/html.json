{
  "hash": "455fe2f6b496ad0d26af54eb5491c9b6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"\"\n---\n\n\n\n\nAfter selecting the climate variables, they were applied in a logistic model, and the model's performance metrics were evaluated.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gsheet)\nfinal_df = gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1BymEWPRq0ERQ3umD5IOvtK-wa4NMoq4C/edit?usp=sharing&ouid=116573839171815179218&rtpof=true&sd=true\")\n```\n:::\n\n\n\n\n## Logistic model \n\nExample of a model: consider changing the threshold and other climate variables.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rms)\nlibrary(rmda)\nlibrary(pROC)\nlibrary(caret)\n\nfinal_df$e_a\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNULL\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(rms)\ndd <- datadist(final_df)\noptions(datadist = \"dd\")\n\nm_logistic <- lrm(epidemic ~PRECTOTCORR_14_23 + e_a_10_19,data = final_df, x=TRUE, y=TRUE)\nsummary(m_logistic)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             Effects              Response : epidemic \n\n Factor            Low    High   Diff.   Effect    S.E.    Lower 0.95\n PRECTOTCORR_14_23 2.5535 6.6008 4.04720 -0.024322 0.19108 -0.39883  \n  Odds Ratio       2.5535 6.6008 4.04720  0.975970      NA  0.67110  \n e_a_10_19         1.8623 2.2711 0.40876 -0.523650 0.26426 -1.04160  \n  Odds Ratio       1.8623 2.2711 0.40876  0.592360      NA  0.35289  \n Upper 0.95\n  0.3501900\n  1.4193000\n -0.0056997\n  0.9943200\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(Predict(m_logistic),conf.int = TRUE)\n```\n\n::: {.cell-output-display}\n![](logistic_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\npred <- predict(m_logistic, final_df, type = \"fitted\")\nfinal_df$epidemic <- as.numeric(as.character(final_df$epidemic))\ncompare <- data.frame(1, final_df$epidemic, pred)\nlibrary(PresenceAbsence)\noptimal.thresholds(compare)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         Method      pred\n1       Default 0.5000000\n2     Sens=Spec 0.5200000\n3  MaxSens+Spec 0.5800000\n4      MaxKappa 0.5800000\n5        MaxPCC 0.5800000\n6  PredPrev=Obs 0.5100000\n7       ObsPrev 0.5309278\n8      MeanProb 0.5309278\n9    MinROCdist 0.5200000\n10      ReqSens 0.4500000\n11      ReqSpec 0.6000000\n12         Cost 0.5800000\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(caret)\nconfusionMatrix(data = as.factor(as.numeric(pred > 0.76)),  mode= \"everything\",  reference = as.factor(final_df$epidemic))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction   0   1\n         0  90 103\n         1   1   0\n                                          \n               Accuracy : 0.4639          \n                 95% CI : (0.3922, 0.5368)\n    No Information Rate : 0.5309          \n    P-Value [Acc > NIR] : 0.9738          \n                                          \n                  Kappa : -0.0103         \n                                          \n Mcnemar's Test P-Value : <2e-16          \n                                          \n            Sensitivity : 0.9890          \n            Specificity : 0.0000          \n         Pos Pred Value : 0.4663          \n         Neg Pred Value : 0.0000          \n              Precision : 0.4663          \n                 Recall : 0.9890          \n                     F1 : 0.6338          \n             Prevalence : 0.4691          \n         Detection Rate : 0.4639          \n   Detection Prevalence : 0.9948          \n      Balanced Accuracy : 0.4945          \n                                          \n       'Positive' Class : 0               \n                                          \n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(pROC)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}